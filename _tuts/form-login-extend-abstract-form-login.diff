diff --git a/src/Security/LoginFormAuthenticator.php b/src/Security/LoginFormAuthenticator.php
index 9e30c3e..bdabf7b 100644
--- a/src/Security/LoginFormAuthenticator.php
+++ b/src/Security/LoginFormAuthenticator.php
@@ -9,13 +9,13 @@ use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Routing\RouterInterface;
 use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
 use Symfony\Component\Security\Core\Exception\AuthenticationException;
-use Symfony\Component\Security\Http\Authenticator\AbstractAuthenticator;
+use Symfony\Component\Security\Http\Authenticator\AbstractLoginFormAuthenticator;
 use Symfony\Component\Security\Http\Authenticator\Passport\Badge\UserBadge;
 use Symfony\Component\Security\Http\Authenticator\Passport\Credentials\PasswordCredentials;
 use Symfony\Component\Security\Http\Authenticator\Passport\Passport;
 use Symfony\Component\Security\Http\Authenticator\Passport\PassportInterface;
 
-class LoginFormAuthenticator extends AbstractAuthenticator
+class LoginFormAuthenticator extends AbstractLoginFormAuthenticator
 {
     private $userRepository;
     private $router;
@@ -26,12 +26,6 @@ class LoginFormAuthenticator extends AbstractAuthenticator
         $this->router = $router;
     }
 
-    public function supports(Request $request): ?bool
-    {
-        return $request->attributes->get('_route') === 'app_login'
-            && $request->isMethod('POST');
-    }
-
     public function authenticate(Request $request): PassportInterface
     {
         $email = $request->request->get('email');
@@ -50,8 +44,8 @@ class LoginFormAuthenticator extends AbstractAuthenticator
         return new RedirectResponse($this->router->generate('app_homepage'));
     }
 
-    public function onAuthenticationFailure(Request $request, AuthenticationException $exception): ?Response
+    protected function getLoginUrl(Request $request): string
     {
-        return null;
+        return $this->router->generate('app_login');
     }
 }
