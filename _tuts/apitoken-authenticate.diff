diff --git a/src/Security/ApiTokenAuthenticator.php b/src/Security/ApiTokenAuthenticator.php
index 17eb699..ddc91f0 100644
--- a/src/Security/ApiTokenAuthenticator.php
+++ b/src/Security/ApiTokenAuthenticator.php
@@ -2,15 +2,27 @@
 
 namespace App\Security;
 
+use App\Repository\ApiTokenRepository;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
 use Symfony\Component\Security\Core\Exception\AuthenticationException;
+use Symfony\Component\Security\Core\Exception\CustomUserMessageAuthenticationException;
 use Symfony\Component\Security\Http\Authenticator\AbstractAuthenticator;
+use Symfony\Component\Security\Http\Authenticator\Passport\Badge\UserBadge;
+use Symfony\Component\Security\Http\Authenticator\Passport\Passport;
 use Symfony\Component\Security\Http\Authenticator\Passport\PassportInterface;
+use Symfony\Component\Security\Http\Authenticator\Passport\SelfValidatingPassport;
 
 class ApiTokenAuthenticator extends AbstractAuthenticator
 {
+    private $apiTokenRepository;
+
+    public function __construct(ApiTokenRepository $apiTokenRepository)
+    {
+        $this->apiTokenRepository = $apiTokenRepository;
+    }
+
     public function supports(Request $request): ?bool
     {
         return $request->headers->has('X-TOKEN');
@@ -18,7 +30,20 @@ class ApiTokenAuthenticator extends AbstractAuthenticator
 
     public function authenticate(Request $request): PassportInterface
     {
-        // TODO: Implement authenticate() method.
+        $token = $request->headers->get('X-TOKEN');
+
+        return new SelfValidatingPassport(
+            new UserBadge($token, function($token) {
+                $apiToken = $this->apiTokenRepository
+                    ->findOneBy(['token' => $token]);
+
+                if (!$apiToken) {
+                    throw new CustomUserMessageAuthenticationException('Invalid token');
+                }
+
+                return $apiToken->getUser();
+            })
+        );
     }
 
     public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName): ?Response
